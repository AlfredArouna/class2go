[{"start": 0.0, "end": 4.05, "subtitle": "Continuing on a theme of routing, in this<br>lecture, I'm going to be telling you about"}, {"start": 4.05, "end": 6.098, "subtitle": "something called the Spanning Tree<br>Protocol."}, {"start": 6.098, "end": 10.07, "subtitle": "The Spanning Tree Protocol is actually<br>used for Ethernet switches."}, {"start": 10.086, "end": 15.003, "subtitle": "We normally think of routing as operating<br>at the, at the, at the IP or the network"}, {"start": 15.003, "end": 17.085, "subtitle": "layer.<br>But, anything that, any situation where we"}, {"start": 17.085, "end": 22.024, "subtitle": "want to send packets along a particular<br>path, path that we choose carefully, we"}, {"start": 22.024, "end": 26.013, "subtitle": "can think of that as routing.<br>So, Ethernet switches need to decide how"}, {"start": 26.013, "end": 30.03, "subtitle": "to route or forward packets to the correct<br>set of destinations as well."}, {"start": 30.03, "end": 33.039, "subtitle": "So, that's what we're going to be looking<br>at in this video."}, {"start": 33.039, "end": 36.061, "subtitle": "So, we're going to continue with this<br>theme of routing."}, {"start": 36.061, "end": 41.078, "subtitle": "And I'm going to describe something that,<br>at first, won't seem like routing because"}, {"start": 41.078, "end": 47.02, "subtitle": "we normally use the term routing to refer<br>to the network layer and, and IP, IP"}, {"start": 47.02, "end": 50.035, "subtitle": "addressing.<br>But, routing really means any mechanism"}, {"start": 50.035, "end": 55.034, "subtitle": "for delivering packets in a, in a mindful<br>way from a source to a destination."}, {"start": 55.034, "end": 60.022, "subtitle": "And so, in that sense, Ethernet routes<br>packets, too. It's forwarding packets from"}, {"start": 60.022, "end": 65.025, "subtitle": "a source to a destination, it just happens<br>to be doing this based on the Ethernet"}, {"start": 65.025, "end": 68.035, "subtitle": "address.<br>So, in this video, I'm going to be talking"}, {"start": 68.035, "end": 73.056, "subtitle": "about how Ethernet forwards packets.<br>So we know how addresses are learned in"}, {"start": 73.056, "end": 76.023, "subtitle": "Ethernet.<br>And, but, but how does it prevent loops"}, {"start": 76.023, "end": 79.08500000000001, "subtitle": "from happening?<br>It we, we know that it will learn the"}, {"start": 79.08500000000001, "end": 84.069, "subtitle": "address and until it's learned the address<br>and knows the correct direction to send"}, {"start": 84.069, "end": 89.012, "subtitle": "the packet, it will flood to everyone.<br>How do we make sure that those flooded"}, {"start": 89.012, "end": 94.01400000000001, "subtitle": "messages, those protocol messages are not<br>are not looping in the network forever?"}, {"start": 94.01400000000001, "end": 96.094, "subtitle": "After all, there's no TTL field in the<br>Ethernet."}, {"start": 96.094, "end": 101.02000000000001, "subtitle": "So, Ethernet does this by building a<br>spanning tree over which packets are"}, {"start": 101.02000000000001, "end": 103.041, "subtitle": "forward, forwarded.<br>And, we're going to see that,"}, {"start": 103.041, "end": 108.025, "subtitle": "specifically, in a moment, this works in<br>quite a different way from the from what"}, {"start": 108.025, "end": 111.03399999999999, "subtitle": "we've seen so far.<br>Because instead of building a spanning"}, {"start": 111.093, "end": 116.09899999999999, "subtitle": "tree per destination or per, per router,<br>In Ethernet we're going to build a single"}, {"start": 116.09899999999999, "end": 121.098, "subtitle": "spanning tree for the entire network.<br>In other words, it's going to constrain"}, {"start": 121.098, "end": 127.03, "subtitle": "the overall topology to only use those<br>ports belonging to a single spanning tree."}, {"start": 127.03, "end": 131.043, "subtitle": "So, just recall briefly how an Ethernet<br>switch forwards packets."}, {"start": 131.043, "end": 135.08, "subtitle": "First of all, it examines the header of<br>each arriving Ethernet frame."}, {"start": 135.08, "end": 141.015, "subtitle": "If it finds that the Ethernet destination<br>address is in its forwarding table, it's"}, {"start": 141.015, "end": 144.081, "subtitle": "going to forward the frame to the correct<br>outgoing port."}, {"start": 144.081, "end": 148.073, "subtitle": "If the Ethernet destination address is not<br>found in the table, it's going to"}, {"start": 148.073, "end": 153.086, "subtitle": "broadcast the frame to all out going ports<br>because it doesn't know which one to send"}, {"start": 153.086, "end": 156.064, "subtitle": "it to, it's just going to send it to every<br>one."}, {"start": 156.064, "end": 161.059, "subtitle": "And, now we've learned about flooding we<br>can see why it would do that we can be"}, {"start": 161.059, "end": 164.031, "subtitle": "sure it will reach it's eventual<br>destination."}, {"start": 164.031, "end": 169.02, "subtitle": "And then, it learns entries in the table<br>are learned by examining the Ethernet"}, {"start": 169.02, "end": 173.048, "subtitle": "source address of arriving packets.<br>In other words, when it looks at the"}, {"start": 173.048, "end": 178.001, "subtitle": "source address, it will learn that in<br>order to reach that particular source"}, {"start": 178.001, "end": 181.002, "subtitle": "address,<br>It sends packets out through the port"}, {"start": 181.002, "end": 186.046, "subtitle": "through which that packet arrived, so that<br>must be on the direction between towards"}, {"start": 186.046, "end": 190.025, "subtitle": "the source.<br>But, this all presupposes that packets"}, {"start": 190.025, "end": 194.068, "subtitle": "don't loop in the network forever. And<br>that, in fact, the,"}, {"start": 194.068, "end": 200.062, "subtitle": "The, particularly in the learning process,<br>that the Ethernet source address actually"}, {"start": 200.062, "end": 205.091, "subtitle": "is on the shortest path or on a reasonable<br>path back towards that address."}, {"start": 205.091, "end": 212.066, "subtitle": "So, how does it, how does it know that?<br>And, in fact, the whole learning process"}, {"start": 212.066, "end": 218.006, "subtitle": "could lead to loops.<br>So, let's see an example of, of what might"}, {"start": 218.006, "end": 222.03, "subtitle": "happen.<br>If we have a network with ah,, let's say,"}, {"start": 222.03, "end": 229.029, "subtitle": "this is source and a destination, and in<br>between we have a sequence of switches,"}, {"start": 229.029, "end": 234.001, "subtitle": "something like this, that are all<br>connected like, like this."}, {"start": 175.05, "end": 239.041, "subtitle": "So, B is then directly connected here, and<br>then A is connected to a switch here."}, {"start": 239.041, "end": 244.089, "subtitle": "In the learning processes, as we've<br>described, the first time that A sends to"}, {"start": 244.089, "end": 250.058, "subtitle": "B, and let's say it's going to send it's<br>going to send its packet in here destined"}, {"start": 250.058, "end": 253.054, "subtitle": "to B.<br>This first switch is not going to know"}, {"start": 253.054, "end": 259.023, "subtitle": "where to send it because it's never heard<br>from A and B, about A and B before. So,"}, {"start": 259.023, "end": 265.073, "subtitle": "it's going to flood its message out all<br>of these ports. That's going to come down"}, {"start": 265.073, "end": 267.055, "subtitle": "here.<br>It's going to, to go out here."}, {"start": 267.055, "end": 272.001, "subtitle": "It's going to, to come down here. But,<br>because this what this switch here will do"}, {"start": 272.001, "end": 276.077, "subtitle": "is send it out of all the ports except the<br>one that it learnt, that it heard from,"}, {"start": 276.077, "end": 281.023, "subtitle": "This is also going to come from here back<br>down here, and go around this loop"}, {"start": 281.023, "end": 284.081, "subtitle": "forever. And this one is going to go<br>around this loop forever,"}, {"start": 284.081, "end": 288.085, "subtitle": "And there's another loop here. And so, you<br>can quickly get the picture.,"}, {"start": 288.085, "end": 291.096, "subtitle": "These packets are going to be looping<br>around forever."}, {"start": 291.096, "end": 296.078, "subtitle": "They are going to get delivered to B.<br>B will respond and the address will get"}, {"start": 296.078, "end": 299.089, "subtitle": "learned.<br>But, in the meantime, we've created this"}, {"start": 299.089, "end": 304.062, "subtitle": "huge loop of flooded addresses.<br>So, we need to make sure that doesn't"}, {"start": 304.062, "end": 308.017, "subtitle": "happen.<br>The Spanning Tree Protocol that I'm going"}, {"start": 308.017, "end": 311.064, "subtitle": "to describe now was invented to solve this<br>problem."}, {"start": 311.064, "end": 316.056, "subtitle": "So, rather than deciding how we route<br>along a spanning tree for, for each"}, {"start": 316.056, "end": 321.099, "subtitle": "address, or to reach each destination,<br>it's going to, to build one spanning tree"}, {"start": 321.099, "end": 323.087, "subtitle": "for the entire network.<br>So,"}, {"start": 323.087, "end": 330.021, "subtitle": "Just to give you an example, I'm going to<br>redraw my, or, a, a switch, network here"}, {"start": 330.021, "end": 335.04200000000003, "subtitle": "that has a bunch of loops in it.<br>Won't be exactly the same as the one"}, {"start": 335.04200000000003, "end": 339.012, "subtitle": "before, but roughly the same.<br>So, here with A and B."}, {"start": 339.012, "end": 345.009, "subtitle": "What it's going to do is it's going to go<br>through and disable some ports in, in the"}, {"start": 345.009, "end": 348.044, "subtitle": "network to prevent this loop from<br>happening."}, {"start": 348.044, "end": 354.046, "subtitle": "So, one example of what it might do is,<br>essentially switch off this link here so"}, {"start": 354.046, "end": 359.08, "subtitle": "that loop at the top is prevented.<br>And, it could switch off the loop, the,"}, {"start": 359.08, "end": 363.099, "subtitle": "the, the link here and prevent this loop<br>down, down here."}, {"start": 363.099, "end": 370.089, "subtitle": "So we end up with a, a spanning tree in<br>this case which is like this of which all"}, {"start": 370.089, "end": 374.025, "subtitle": "the switches are on that spanning tree so<br>it spans."}, {"start": 374.025, "end": 379.047, "subtitle": "It's a tree so that there are no loops.<br>And, A and B can talk to each other over"}, {"start": 379.047, "end": 384.075, "subtitle": "that spanning, over that spanning tree.<br>So, it gives us a rough idea of what we're"}, {"start": 384.075, "end": 389.032, "subtitle": "going to see next.<br>So, preventing loops."}, {"start": 389.032, "end": 395.026, "subtitle": "The Spanning Tree Protocol, it's, it's<br>going to start by recognizing that the"}, {"start": 395.026, "end": 400.0, "subtitle": "topology of switches is a graph,<br>And we've seen many examples of these"}, {"start": 400.0, "end": 402.085, "subtitle": "before.<br>And, the Spanning Tree Protocol is going"}, {"start": 402.085, "end": 407.04, "subtitle": "to find a subgraph that spans all of the<br>vertices, all of the switches without"}, {"start": 407.04, "end": 409.08299999999997, "subtitle": "creating any loops,<br>It's a spanning tree."}, {"start": 409.08299999999997, "end": 414.014, "subtitle": "And the distributed protocol is going to<br>run across all of these switches,"}, {"start": 414.014, "end": 418.081, "subtitle": "And it's going to start by deciding which<br>switch is the root of the tree, of the"}, {"start": 418.081, "end": 421.048, "subtitle": "single spanning tree that it's going to<br>create."}, {"start": 421.048, "end": 425.055, "subtitle": "And then, which ports are allowed to<br>forward packets along the tree."}, {"start": 425.055, "end": 430.013, "subtitle": "Let's look at an example here.<br>This is a, a just an example spanning"}, {"start": 430.013, "end": 432.089, "subtitle": "tree.<br>So, the step one is it's going to pick a"}, {"start": 432.089, "end": 437.002, "subtitle": "single a single root.<br>And the way that it's going to do this is,"}, {"start": 437.002, "end": 441.002, "subtitle": "just exchange ID numbers and pick the one<br>with the lowest ID."}, {"start": 441.002, "end": 446.026, "subtitle": "So, I'm just going to assume here that<br>it's, it's exchanged enough to decide that"}, {"start": 446.026, "end": 449.092, "subtitle": "S1 is the root.<br>And then, it's going to forward packets on"}, {"start": 449.092, "end": 454.068, "subtitle": "the ports on the shortest hop count path<br>to the root."}, {"start": 454.068, "end": 459.029, "subtitle": "And so, S6 would send along here, S2 would<br>send along here,"}, {"start": 459.029, "end": 464.031, "subtitle": "S4, we've seen many examples of this now<br>of how to create this."}, {"start": 464.031, "end": 470.038, "subtitle": "S8, well, there's an up count of two here<br>and an up count of two here that's, that's"}, {"start": 470.038, "end": 474.05, "subtitle": "somewhat arbitrarily design that it's<br>going to send this way."}, {"start": 474.05, "end": 480.03, "subtitle": "And then S3 that's got an hop count this<br>two this way and one, two, three this way"}, {"start": 480.03, "end": 483.065, "subtitle": "so it will send this way.<br>S9 will send this way."}, {"start": 483.065, "end": 487.021, "subtitle": "So, there's a spending tree that covers<br>all of then."}, {"start": 487.021, "end": 490.043, "subtitle": "And here's another one that, that, that<br>could be created."}, {"start": 490.043, "end": 494.06, "subtitle": "It's, it's almost the same as the one<br>previously because it had a couple of ties"}, {"start": 494.06, "end": 497.095, "subtitle": "that I could break.<br>So, this is the logical spanning tree that"}, {"start": 497.095, "end": 502.034, "subtitle": "has been created. And, of course, there<br>are no loops in it and it spans all of the"}, {"start": 502.034, "end": 504.092, "subtitle": "switches.<br>So, the thing that remains to do is to"}, {"start": 504.092, "end": 508.076, "subtitle": "figure out, how it does this?<br>We know what it's going to end up with, so"}, {"start": 508.076, "end": 512.028, "subtitle": "how does it get there?<br>So, let's take a look at how Spanning Tree"}, {"start": 512.028, "end": 515.03, "subtitle": "Protocol works.<br>There's a little bit of detail here and"}, {"start": 515.03, "end": 517.094, "subtitle": "I'm going to, to go through this one step<br>at a time."}, {"start": 517.094, "end": 522.0840000000001, "subtitle": "So, the first thing that happens is that<br>all switches broad, broadcast a special"}, {"start": 522.0840000000001, "end": 526.02, "subtitle": "type of packet called a Bridge Protocol<br>Data Unit."}, {"start": 526.02, "end": 531.071, "subtitle": "Protocol Data Unit is just a little bit of<br>an old fashioned term for a Packet, and"}, {"start": 531.071, "end": 537.002, "subtitle": "Bridge is an older name for Switches<br>before Ethernet switches were popularized"}, {"start": 537.002, "end": 542.033, "subtitle": "in the 1990's they were called bridges.<br>So, Bridge Protocol Data Unit is usually"}, {"start": 542.033, "end": 546.036, "subtitle": "abbreviated to BPDU.<br>This isn't in the context in which this"}, {"start": 546.036, "end": 549.079, "subtitle": "term BPDU is, is used, so don't worry too<br>much about it."}, {"start": 549.079, "end": 554.044, "subtitle": "It's essentially the special control<br>messages that are sent around, in order to"}, {"start": 554.044, "end": 558.001, "subtitle": "build the spanning tree.<br>The BPDU contains three pieces of"}, {"start": 558.001, "end": 561.063, "subtitle": "information.<br>The ID of who it is that's sending it, and"}, {"start": 561.063, "end": 565.065, "subtitle": "that's the, the switch ID.<br>So, in my previous example, S1, S2, S3,"}, {"start": 565.065, "end": 571.041, "subtitle": "it's usually actually derived from the MAC<br>address just so that it's unique and it"}, {"start": 571.041, "end": 576.083, "subtitle": "may be manually configured by the, by the<br>administrator. But, we'll just use the"}, {"start": 576.083, "end": 580.032, "subtitle": "switch IDs on, on the PowerPoint pictures<br>for now."}, {"start": 580.032, "end": 584.053, "subtitle": "It contains the ID of who it currently<br>believes to be the root,"}, {"start": 584.053, "end": 587.051, "subtitle": "And we'll see how this evolves, in a<br>moment."}, {"start": 587.051, "end": 590.097, "subtitle": "And, it's the distance from the sender to<br>the root."}, {"start": 590.097, "end": 595.096, "subtitle": "In other words, what it believes is the<br>distance from itself to the root."}, {"start": 595.096, "end": 600.066, "subtitle": "And this is the, the best, the best,<br>estimate that it has right now."}, {"start": 600.066, "end": 604.061, "subtitle": "So, to start with, every switch is going<br>to, is going to boot up and think that"}, {"start": 604.061, "end": 607.039, "subtitle": "it's the root.<br>It's going to claim that it's the root."}, {"start": 607.039, "end": 611.068, "subtitle": "In other words, it's going to put it's<br>idea of it's sender to be the same as the"}, {"start": 611.068, "end": 615.079, "subtitle": "idea of the root, and because they are one<br>and the same, it's going to say the"}, {"start": 615.079, "end": 620.019, "subtitle": "distance field to zero because that's the<br>distance from the sender to the root."}, {"start": 620.019, "end": 624.085, "subtitle": "And every switch is going to broadcast<br>this value until it hears a better value."}, {"start": 624.085, "end": 628.099, "subtitle": "In other words, a root with a smaller ID<br>would be the most likely case."}, {"start": 628.099, "end": 633.0840000000001, "subtitle": "So, if I'm currently advertising that I<br>think that I'm root and then somebody else"}, {"start": 633.0840000000001, "end": 638.091, "subtitle": "sends me a message and says, I'm the root<br>and its ID is lower than mine, then I will"}, {"start": 638.091, "end": 642.064, "subtitle": "start saying, okay, I believe that you're<br>the root instead of me."}, {"start": 642.064, "end": 647.031, "subtitle": "If there happens to be a root with the<br>same ID, it's going to pick the one with"}, {"start": 647.031, "end": 652.045, "subtitle": "the shorter distance and ties are going to<br>be broken by the smaller ID of the, of the"}, {"start": 652.045, "end": 655.056, "subtitle": "sender.<br>So, if a switch hears a better message,"}, {"start": 655.056, "end": 661.012, "subtitle": "it's not only going to adopt to that value<br>as the root, it's going to re-transmit"}, {"start": 661.012, "end": 665.004, "subtitle": "that message and it's going to add one to<br>the distance."}, {"start": 665.004, "end": 670.055, "subtitle": "And say, I'm going to forward my ID as the<br>sender, the newly learned ID of the root,"}, {"start": 670.055, "end": 674.035, "subtitle": "And I'm going to go add with one value,<br>one to the value that was told to me"}, {"start": 674.035, "end": 677.019, "subtitle": "because the hop count is now increased by<br>one,"}, {"start": 677.019, "end": 681.083, "subtitle": "And I'm going to say that, that is the<br>distance from the sender to the root."}, {"start": 681.083, "end": 686.06, "subtitle": "So eventually, jumping down to here.<br>Eventually, there will be only one root"}, {"start": 686.06, "end": 691.031, "subtitle": "that will originate this message and<br>everybody else will retransmit them."}, {"start": 691.031, "end": 696.047, "subtitle": "Because everybody will uniquely pick the<br>same the same switch ID as the root."}, {"start": 696.047, "end": 698.067, "subtitle": "Okay.<br>Now, we know who the root is."}, {"start": 698.067, "end": 704.011, "subtitle": "We now have to figure out how this spanning<br>tree is built in order to send packets to"}, {"start": 704.011, "end": 707.093, "subtitle": "and from that root.<br>So, the root port is, is picked on every"}, {"start": 707.093, "end": 711.004, "subtitle": "switch.<br>It's the port on a switch that is closest"}, {"start": 711.004, "end": 714.054, "subtitle": "to the root.<br>In other words, its the one through which"}, {"start": 714.054, "end": 719.034, "subtitle": "the BPDU was heard, the talk, the gate<br>that was that shortest distance to the"}, {"start": 719.034, "end": 722.032, "subtitle": "root,<br>So that's nice and easy thing to figure"}, {"start": 722.032, "end": 725.03, "subtitle": "out.<br>And that will be the one through which it"}, {"start": 725.03, "end": 730.036, "subtitle": "sends messages, forwards messages to the<br>root or receives them from the root."}, {"start": 730.036, "end": 733.099, "subtitle": "Not only the BPDUs but also the forwarded<br>packets."}, {"start": 733.099, "end": 738.017, "subtitle": "The second type of port is what's called<br>the designated port."}, {"start": 738.017, "end": 743.01, "subtitle": "This is the port that neighbors agree to<br>use in order to reach the port."}, {"start": 743.01, "end": 748.031, "subtitle": "It's essentially the port through which<br>eventually packets had destined to the"}, {"start": 748.031, "end": 750.091, "subtitle": "root, root will be received at this<br>switch."}, {"start": 750.091, "end": 755.071, "subtitle": "And packets coming from the root will be<br>forwarded onto this, onto this port in"}, {"start": 755.071, "end": 760.03, "subtitle": "order to reach the other switches.<br>All other ports are blocked from"}, {"start": 760.03, "end": 763.069, "subtitle": "forwarding.<br>In other words, only those ports that are"}, {"start": 763.069, "end": 768.083, "subtitle": "the root ports or the designated ports<br>will continue to forward regular packets."}, {"start": 768.083, "end": 771.066, "subtitle": "All other ports are blocked from<br>forwarding."}, {"start": 771.066, "end": 776.08, "subtitle": "However, they will still send and receive<br>BPDUs so that the control messages are"}, {"start": 776.08, "end": 781.088, "subtitle": "still send and receive so that we can<br>continue to build the spanning tree such"}, {"start": 781.088, "end": 787.002, "subtitle": "that if something changes, a switch goes<br>down or a link goes down, everybody will"}, {"start": 787.002, "end": 789.047, "subtitle": "converge on a new shortest, a new spanning<br>tree."}, {"start": 789.047, "end": 796.069, "subtitle": "Okay. So eventually, locally, only, only<br>switch will only forward on the ports that"}, {"start": 796.069, "end": 802.092, "subtitle": "are root ports and designated ports.<br>Let me finish this video on the Spanning"}, {"start": 802.092, "end": 806.012, "subtitle": "Tree Protocol by telling you about a brief<br>history."}, {"start": 806.012, "end": 810.062, "subtitle": "Spanning Tree Protocol was originally<br>invented in 1985 by Radia Perlman."}, {"start": 810.081, "end": 816.032, "subtitle": "At that time Ethernet switches were called<br>bridges and networks were beginning to be"}, {"start": 816.032, "end": 821.008, "subtitle": "built with a large number of bridges.<br>This was really before routing was, was"}, {"start": 821.008, "end": 824.071, "subtitle": "very popular.<br>And as a consequence, they really needed a"}, {"start": 824.071, "end": 829.066, "subtitle": "quick method for, for reliably building a<br>spanning tree that all of the packets"}, {"start": 829.066, "end": 833.085, "subtitle": "coul, could follow to, to prevent<br>broadcast storms from escalating in the"}, {"start": 833.085, "end": 836.022, "subtitle": "network.<br>It was standardized in 1990 by IEEE."}, {"start": 836.022, "end": 840.063, "subtitle": "Still yet, we converged relatively slowly<br>and this networks became bigger, this"}, {"start": 840.063, "end": 844.099, "subtitle": "became more and more of a problem.<br>The timers that we used were quite long"}, {"start": 844.099, "end": 847.087, "subtitle": "and the, the, the method takes quite a<br>while to converge."}, {"start": 847.087, "end": 851.072, "subtitle": "And so, a more rapid version called the<br>Rapid Spanning Tree Protocol was"}, {"start": 851.072, "end": 855.0, "subtitle": "introduced in 2004.<br>Still, this built a single tree for the"}, {"start": 855.0, "end": 859.064, "subtitle": "entire network and the, the path followed<br>by the packets would often be a some what"}, {"start": 859.064, "end": 864.005, "subtitle": "torturous path, it's not necessarily the<br>shortest path between the source and"}, {"start": 864.005, "end": 868.0360000000001, "subtitle": "destination because these packets would<br>always have to go through the roots."}, {"start": 868.0360000000001, "end": 873.052, "subtitle": "So, more recently, the Shortest Path<br>Bridging Protocol was introduced just in"}, {"start": 873.052, "end": 877.094, "subtitle": "2012, and this uses our old friend, the<br>link state algorithm."}, {"start": 878.0, "end": 881.06, "subtitle": "A little bit like Dijkstra's algorithm<br>used in OSPF."}, {"start": 881.06, "end": 886.097, "subtitle": "In order to build a shortest path tree,<br>from each source to each destination."}, {"start": 886.097, "end": 892.0409999999999, "subtitle": "And so, in, in, in the end, we've ended up<br>with a method that is very similar to"}, {"start": 892.0409999999999, "end": 896.096, "subtitle": "what's used at, at layer three.<br>This will probably be rolled out and"}, {"start": 896.096, "end": 903.032, "subtitle": "adopted over the next few years.<br>That's the end of this video."}]
