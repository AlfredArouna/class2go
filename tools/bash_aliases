#!/bin/bash

## source this from your login shell

hoststage="app1"
hostprod="app1"

function prodapp {
    ssh-add -l | grep -q "c2g-stag" || echo "ERROR: no \"c2g-prod\" key in your ssh agent, this probably won't work"
    ssh -A bitnami@${hostprod}.prod.c2gops.com
}

# function proddb {
#     ssh-add -l | grep -q "c2g-prod" || echo "ERROR: no \"c2g-prod\" key in your ssh agent, this probably won't work"
#     ssh -At bitnami@${hostprod}.stage.c2gops.com "class2go/django-project/manage.py dbshell"
# }

function stageapp {
    ssh-add -l | grep -q "c2g-stag" || echo "ERROR: no \"c2g-stag\" key in your ssh agent, this probably won't work"
    ssh -A bitnami@${hoststage}.stage.c2gops.com
}

function jenkins {
    ssh-add -l | grep -q "c2g-stag" || echo "ERROR: no \"c2g-stag\" key in your ssh agent, this probably won't work"
    ssh -A ubuntu@jenkins.dev.c2gops.com
}

# function stagedb {
#     ssh-add -l | grep -q "c2g-stag" || echo "ERROR: no \"c2g-stag\" key in your ssh agent, this probably won't work"
#     ssh -At bitnami@${hoststage}.stage.c2gops.com "class2go/django-project/manage.py dbshell"
# }

alias localdb="~/src/class2go/django-project/manage.py dbshell"

##
## PROJECT MANAGEMENT JUNK
##

function buglist-sprint {
    if [[ $# -ne 1 ]]; then
        echo "usage: buglist-sprint <milestone>"
        return 1
    fi
    for a in dcadams halawa jbau jinpa kelvindo kluo sefk shalinguyen wescott; do
        for p in P0 P1
        do
            echo "--------- $a ($p) ---------"
            ghi list -l $p -u $a -q -M $1
        done
        echo; echo
    done
}

function buglist-unprioritized {
    ghi list -s open | egrep -v '[P0]|[P1]|[P2]'
}

function buglist-counts {
    NOW=`date -u +"%F %R UTC"`
    case `uname` in
        "Darwin" )
            YESTERDAY=`date -v -1d` ;;
        * )
            YESTERDAY=`date --date="yesterday"` ;;
    esac

    for l in P0 P1 P2; do
        # echo -ne "${NOW}\t"
        echo -ne "$l\t"
        ghi list -s open -l $l | grep -v '3-Done' | wc -l | tr -d ' ' | tr -d '\n'

        ACTIVE=`ghi list -s open -l $l --since "${YESTERDAY}" | grep -v '3-Done' | wc -l | tr -d ' '`
        echo -ne "\t (${ACTIVE} active)"
        echo
    done
}

function buglist-active {
    case `uname` in
        "Darwin" )
            YESTERDAY=`date -v -1d` ;;
        * )
            YESTERDAY=`date --date="yesterday"` ;;
    esac
    echo -ne '# Marked as Not Done, '
    ghi list -s open --since "${YESTERDAY}"  | grep -v '3-Done'
    echo -ne '# Marked as Done, '
    ghi list -s open --since "${YESTERDAY}"  | egrep '^#|3-Done'
    ghi list -s closed --since "${YESTERDAY}"
}

function buglist-hot {
    ghi list -s open -l P0 | grep -v '3-Done' 
}

function buglist-goalline {
    echo "-------- COUNTS OF OPEN ISSUES "
    echo
    buglist-counts

    echo; echo
    echo "-------- ALL OPEN P0 ISSUES"
    echo
    buglist-hot

    echo; echo
    echo "-------- ALL ACTIVE ISSUES"
    echo
    buglist-active

    echo; echo
    echo "Notes:"
    echo "- Counts and bug lists exclude bugs marked with \"3-Done\" label."
    echo "- \"Active\" means opened or commented-on in the prior 24 hours."
    echo "- Bugs are sorted with most recent activity on top."
}


